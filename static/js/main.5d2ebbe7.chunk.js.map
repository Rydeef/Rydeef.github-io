{"version":3,"sources":["Calc/CalcInput.js","Calc/CalcButtons.js","Calc/CalcClear.js","App.js","serviceWorker.js","index.js"],"names":["CalcInput","props","counter","c","inputArray","length","test","join","splice","i","split","Number","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","pop","setCalcValue","type","readOnly","className","value","CalcButtons","useState","lastChar","setLastChar","lastAct","setLastAct","addValue","char","calcValue","equally","actChar","numChar","j","answer","shift","equal","push","useEffect","map","num","index","onClick","key","act","CalcClear","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5d2ebbe7.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nfunction CalcInput(props){\r\n    let counter = 0\r\n    let c = props.inputArray.length - 1\r\n    if(/(Infinity)/.test(props.inputArray.join(''))){\r\n        props.inputArray.splice(0, props.inputArray.length, 'Division by zero is prohibited')\r\n        \r\n    }\r\n    else if(/(NaN)/.test(props.inputArray.join(''))){\r\n        props.inputArray.splice(0, props.inputArray.length, 'Error')\r\n    }\r\n    else if(/(undefined)/.test(props.inputArray.join(''))){\r\n        props.inputArray.splice(0, props.inputArray.length, 'Error')\r\n    }\r\n    for(let i = props.inputArray.join('').split(/[+/*-]/).length-1; i>=0; i--){\r\n        if(Number(props.inputArray.join('').split(/[+/*-]/)[i]) >= Number.MAX_SAFE_INTEGER){\r\n            props.inputArray.splice(0, props.inputArray.length, 'Maximum permitted value exceeded')\r\n        }\r\n        if(Number(props.inputArray.join('').split(/[+/*-]/)[i]) <= Number.MIN_SAFE_INTEGER){\r\n            props.inputArray.splice(0, props.inputArray.length, 'Minimum permitted value exceeded')\r\n        }\r\n    }\r\n    \r\n    \r\n    for(c; c>=0; c--){\r\n        \r\n        if(props.inputArray[c] === '0.' || props.inputArray[c] === '.'){\r\n            \r\n            if((props.inputArray[c] === '0.' || props.inputArray[c] === '.') && counter === 2){\r\n                props.inputArray.pop()\r\n                \r\n                props.setCalcValue([props.inputArray.join('')])\r\n                counter = 2\r\n            }\r\n            counter = 2\r\n        }\r\n        else if(/[+*-/]/.test(props.inputArray[c])){\r\n            counter = 0\r\n        }\r\n        if(/[*+/]/.test(props.inputArray[0])){\r\n            props.inputArray.splice(0, 1)\r\n        }\r\n\r\n        if(props.inputArray[c] == '.' && /[\\D]/.test(props.inputArray[c-1])){\r\n            props.inputArray.splice(c, 1, '0.')\r\n        }\r\n        \r\n        else if(/[.+-/*]/.test(props.inputArray[c]) && /[.+-/*]/.test(props.inputArray[c-1])){\r\n            props.inputArray.splice(c-1, 1)\r\n        }\r\n        \r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n            <input type=\"text\" readOnly className=\"calc-input\" value = {props.inputArray.join('')}/> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default CalcInput\r\n","import React, { useEffect } from \"react\"\r\nimport { useState } from \"react\"\r\n\r\n\r\n\r\nfunction CalcButtons(props){\r\n  const numbers = [7, 8, 9, 4, 5, 6, 1, 2, 3, '.', 0]\r\n  const actions = ['/', '*', '-', '+']\r\n  const [lastChar, setLastChar] = useState('')\r\n  const [lastAct, setLastAct] = useState('')\r\n  const addValue = (char) => () => {\r\n    \r\n    if(props.inputArray[0] == '0' && /[\\d]/.test(char) && props.inputArray.length < 2){\r\n      props.setCalcValue([''])\r\n      props.setCalcValue([char])\r\n     \r\n    }\r\n    else{\r\n      props.setCalcValue([props.calcValue + char])\r\n      \r\n      if(/[.]/.test(char)){\r\n        setLastChar('')  \r\n      }\r\n      else{\r\n        setLastChar(char)  \r\n        setLastAct('')\r\n      }\r\n      \r\n    }\r\n    \r\n    \r\n    if(props.calcValue == 'Infinity' || props.calcValue == '-Infinity'){\r\n      props.setCalcValue(['0'])\r\n      props.setCalcValue([char])\r\n    }\r\n    if(props.calcValue == 'NaN'){\r\n      props.setCalcValue(['0'])\r\n      props.setCalcValue([char])\r\n    }\r\n    if(props.calcValue == 'undefined'){\r\n      props.setCalcValue(['0'])\r\n      props.setCalcValue([char])\r\n    }\r\n    if(props.calcValue == 'Maximum permitted value exceeded' || props.calcValue == 'Minimum permitted value exceeded'){\r\n      props.setCalcValue(['0'])\r\n      props.setCalcValue([char])\r\n    }\r\n    \r\n  }\r\n  \r\n  useEffect(() => {\r\n    \r\n    if(/[-]/g.test(props.inputArray[0]) && /\\d/g.test(props.inputArray[1])){\r\n      if(props.inputArray.join('').split(/[-+/*]/g).length === 4){\r\n        props.inputArray.pop()\r\n        equally()\r\n        \r\n      }\r\n    }\r\n    else{\r\n      if(props.inputArray.join('').split(/[-+/*]/g).length === 3){\r\n        props.inputArray.pop()\r\n        equally()\r\n        \r\n      }\r\n    }\r\n    \r\n  },[props.inputArray.join('').split(/[-+/*]/g).length]\r\n  )\r\n  \r\n\r\n  function equally(){\r\n    let c, actChar = [], numChar = []\r\n    if(props.inputArray.join('').split(/[+/*-]/).length === 1 && !/\\d/.test(lastAct)){\r\n      props.setCalcValue([props.inputArray.join('')])\r\n    }\r\n    else{\r\n      if(/[-]/.test(props.inputArray[0])){\r\n        if(true && /[\\d]/.test(props.inputArray[1])){\r\n          numChar = props.inputArray.join('').split(/[+/*-]/)\r\n          actChar = props.inputArray.join('').split(/[.\\d]/).join('').split('')\r\n          numChar.splice(0, 2, actChar[0] + numChar[1])\r\n          actChar.shift()\r\n        }\r\n      }\r\n      \r\n      numChar = props.inputArray.join('').split(/[+/*-]/)\r\n      actChar = props.inputArray.join('').split(/[.\\d]/).join('').split('')\r\n      \r\n      \r\n      let j\r\n      for(j=0;j<=numChar.length - 1;j++){\r\n        numChar[j] = Number(numChar[j])\r\n      }\r\n      \r\n      let answer\r\n      function equal() {\r\n        for(c=0; c<=actChar.length - 1; c++){\r\n          if(actChar[c] === '+'){\r\n            answer = numChar[c] + numChar[c+1]\r\n            setLastAct(actChar[c] + numChar[c+1])\r\n          }\r\n          if(actChar[c] === '-'){\r\n            answer = numChar[c] - numChar[c+1]\r\n            setLastAct(actChar[c] + numChar[c+1])\r\n          }\r\n          if(actChar[c] === '/'){\r\n            answer = numChar[c] / numChar[c+1]    \r\n            setLastAct(actChar[c] + numChar[c+1])\r\n          }\r\n          if(actChar[c] === '*'){\r\n            answer = numChar[c] * numChar[c+1]\r\n            setLastAct(actChar[c] + numChar[c+1])\r\n          }\r\n        }\r\n        \r\n      }\r\n      equal()\r\n      if(/[\\D]/.test(lastChar)){\r\n        props.setCalcValue([answer + lastChar])\r\n      }\r\n      else{\r\n        if(/[-]/.test(props.inputArray[0])){\r\n          numChar = props.inputArray.join('').split(/[+/*-]/)\r\n          actChar = props.inputArray.join('').split(/[.\\d]/).join('').split('')\r\n          numChar.splice(0, 2, actChar[0] + numChar[1])\r\n          actChar.shift()\r\n          numChar.push(Number(lastAct.split(/[+/*-]/).join('')))\r\n          actChar = lastAct.split(/[.\\d]/).join('').split('')\r\n          for(j=0;j<=numChar.length - 1;j++){\r\n            numChar[j] = Number(numChar[j])\r\n          }\r\n          equal()\r\n          props.setCalcValue([answer])\r\n        }\r\n        else{\r\n          if(props.inputArray.join('').split(/[+/*-]/).length === 1){\r\n          \r\n            numChar.push(Number(lastAct.split(/[+/*-]/).join('')))\r\n            actChar = lastAct.split(/[.\\d]/).join('').split('')\r\n            equal()\r\n            props.setCalcValue([answer])\r\n          }\r\n          else{\r\n            props.setCalcValue([answer])\r\n          }\r\n        }\r\n        \r\n      }\r\n      \r\n    }\r\n    \r\n  }\r\n\r\n  return(\r\n    <div className=\"calc-buttons\">\r\n      <div className=\"calc-buttons-numbers\">\r\n        {numbers.map((num, index)  => (\r\n          <button onClick={addValue(num)} key={index}>{num}</button>\r\n        ))}\r\n        <button onClick={equally}>=</button>\r\n      </div>\r\n      <div className=\"calc-buttons-actions\">\r\n        {actions.map((act, index) => (\r\n          <button onClick={addValue(act)} key={index} >{act}</button>\r\n        ))}\r\n        \r\n      </div>\r\n    </div>\r\n  )\r\n  \r\n}\r\nexport default CalcButtons","import React from 'react'\r\n\r\nfunction CalcClear(props){\r\n    \r\n    function clear(){\r\n        props.setCalcValue(['0'])\r\n        \r\n    }\r\n    function undo(){\r\n        props.inputArray.splice(props.inputArray.length - 1, 1)\r\n        props.setCalcValue([props.inputArray.join('')])\r\n        if(props.calcValue.join('') === 'Error'){\r\n            props.setCalcValue(['0'])\r\n        }\r\n        \r\n    }\r\n    \r\n    return (\r\n    <>\r\n        <button type=\"submit\" className=\"calc-clear\" onClick={clear}>CLEAR</button>\r\n        <button type=\"submit\" className=\"calc-undo\" onClick={undo}>UNDO</button>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default CalcClear","import React, { useState} from 'react'\nimport CalcInput from './Calc/CalcInput.js'\nimport CalcButtons from './Calc/CalcButtons.js'\nimport CalcClear from './Calc/CalcClear.js'\n\n\nfunction App() {\n\n  const [calcValue, setCalcValue] = useState(['0'])\n  \n  let inputArray = calcValue.join('').split('')\n  \n  return(\n    <div className=\"container\">\n      <div className=\"calc\">\n        <CalcInput inputArray={inputArray} calcValue={calcValue}setCalcValue={setCalcValue}></CalcInput>\n        <CalcClear inputArray={inputArray} calcValue={calcValue} setCalcValue={setCalcValue}></CalcClear>\n        <CalcButtons inputArray={inputArray} calcValue={calcValue} setCalcValue={setCalcValue}></CalcButtons>\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './style.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}